From Wikipedia, the free encyclopedia
(Redirected from Cascading Style Sheets)
This article is about the markup styling language. For other uses, see CSS (disambiguation).
"Pseudo-element" redirects here. For pseudoelement symbols in chemistry, see Skeletal formula § Pseudoelement symbols.
Cascading Style Sheets (CSS)
The official logo of the latest version, CSS 3
Example of CSS source code
Filename extension
.css
Internet media type
text/css
Uniform Type Identifier (UTI)	public.css
Developed by	World Wide Web Consortium (W3C)
Initial release	17 December 1996; 27 years ago
Latest release	CSS 2.1 : Level 2 Revision 1
12 April 2016; 8 years ago
Type of format	Style sheet language
Container for	Style rules for HTML elements (tags)
Contained by	HTML Documents
Open format?	Yes
Website	w3.org/TR/CSS/#css
Cascading Style Sheets

    Style sheet CSS Zen Garden

Concepts

    animations box model image replacement flexbox grid

Philosophies

    Tableless Responsive "Holy grail"

Tools

    Sass Less Stylus

Comparisons

    Stylesheet languages

     Cascading Style Sheets

    vte

HTML

    Dynamic HTML HTML5
        article audio canvas video XHTML
        Basic Mobile Profile HTML element
        meta div and span blink marquee HTML attribute
        alt attribute HTML frame HTML editor Character encodings
        named characters Unicode Language code Document Object Model Browser Object Model Style sheets
        CSS Font family Web colors JavaScript
        WebCL Web3D
        WebGL WebGPU WebXR W3C
        Validator WHATWG Quirks mode Web storage Rendering engine

Comparisons

    Document markup languages Comparison of browser engines

    vte

Cascading Style Sheets (CSS) is a style sheet language used for specifying the presentation and styling of a document written in a markup language such as HTML or XML (including XML dialects such as SVG, MathML or XHTML).[1] CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.[2]

CSS is designed to enable the separation of content and presentation, including layout, colors, and fonts.[3] This separation can improve content accessibility;[further explanation needed] provide more flexibility and control in the specification of presentation characteristics; enable multiple web pages to share formatting by specifying the relevant CSS in a separate .css file, which reduces complexity and repetition in the structural content; and enable the .css file to be cached to improve the page load speed between the pages that share the file and its formatting.

Separation of formatting and content also makes it feasible to present the same markup page in different styles for different rendering methods, such as on-screen, in print, by voice (via speech-based browser or screen reader), and on Braille-based tactile devices. CSS also has rules for alternate formatting if the content is accessed on a mobile device.[4]

The name cascading comes from the specified priority scheme to determine which declaration applies if more than one declaration of a property match a particular element. This cascading priority scheme is predictable.

The CSS specifications are maintained by the World Wide Web Consortium (W3C). Internet media type (MIME type) text/css is registered for use with CSS by RFC 2318 (March 1998). The W3C operates a free CSS validation service for CSS documents.[5]

In addition to HTML, other markup languages support the use of CSS including XHTML, plain XML, SVG, and XUL. CSS is also used in the GTK widget toolkit.
Syntax

CSS has a simple syntax and uses a number of English keywords to specify the names of various style properties.
Style sheet
Main article: Style sheet (web development)

A style sheet consists of a list of rules. Each rule or rule-set consists of one or more selectors, and a declaration block.
Selector
"CSS class" redirects here. For non-CSS use of element classes in HTML, see class attribute (HTML).

In CSS, selectors declare which part of the markup a style applies to by matching tags and attributes in the markup itself.
Selector types

Selectors may apply to the following:

    all elements of a specific type, e.g. the second-level headers h2
    elements specified by attribute, in particular:
        id: an identifier unique within the document, denoted in the selector language by a hash prefix e.g. #id
        class: an identifier that can annotate multiple elements in a document, denoted by a dot prefix e.g. .classname (the phrase "CSS class", although sometimes used, is a misnomer, as element classes—specified with the HTML class attribute—is a markup feature that is distinct from browsers' CSS subsystem and the related W3C/WHATWG standards work on document styles; see RDF and microformats for the origins of the "class" system of the Web content model)
    elements depending on how they are placed relative to others in the document tree.

Classes and IDs are case-sensitive, start with letters, and can include alphanumeric characters, hyphens, and underscores. A class may apply to any number of instances of any element. An ID may only be applied to a single element.
Pseudo-classes

Pseudo-classes are used in CSS selectors to permit formatting based on information that is not contained in the document tree.

One example of a widely used pseudo-class is :hover, which identifies content only when the user "points to" the visible element, usually by holding the mouse cursor over it. It is appended to a selector as in a:hover or #elementid:hover.

A pseudo-class classifies document elements, such as :link or :visited, whereas a pseudo-element makes a selection that may consist of partial elements, such as ::first-line or ::first-letter.[6] Note the distinction between the double-colon notation used for pseudo-elements and the single-colon notation used for pseudo-classes.
Combinators

Multiple simple selectors may be joined using combinators to specify elements by location, element type, id, class, or any combination thereof.[7] The order of the selectors is important. For example, div .myClass {color: red;} applies to all elements of class myClass that are inside div elements, whereas .myClass div {color: red;} applies to all div elements that are inside elements of class myClass. This is not to be confused with concatenated identifiers such as div.myClass {color: red;} which applies to div elements of class myClass.
Summary of selector syntax

The following table provides a summary of selector syntax indicating usage and the version of CSS that introduced it.[8]